Node Package manager(NPM) -- How to use NPM in Your Projects

-> We known as NPM in order to get access to the world of open source node packages.
-> What exactly is the Node pacakge manager also Know as NPM?
   - It basically a place which collects modules that people have built for node and it's created by the GITHUB Organization and it's really great place to find code the other have written
   - where the utilites and tools to help you with writing a node applications
- If we thing of the native node modules as the toolbox that we have at home, then the npm or the Node Package Manager is the place where you'll find all the weird and wonderful tools that you never thought you would need.
- NPM is kind of like a community tool library.In reality people like this library they own stuff like clipers ,silicon guns diff types of tools together they put it into a library so that everyone from the neighborhood can share and use| NPM is kind of like the code equivalent of that.it's open source and you can search to find all the packages that other developer have created, little tools that they've wrriten the code for that they think might be useful for other developers in the future so that you don't have to duplicate the work and to write everything from scratch.So it's shared code library if you will --> SS at 2.07

--> Initialise NPM

- NPM Comes with pre-bundled node , so if you have node installed , you will also have installed NPM
- Let's Initialize our first project and how we can configure our project.
- The word 'npm init' type in terminal hit enter then this brings up the initialization utility which is going to help us create our configuration file, which is called pacakage.json. it ask some bunch of questions like name you would set eg: 'learning-npm' , next version leave it , next description 'what ever relevent to your project' , next entry point : index.js, next test command: leave empty , next git repo : leave empty , author : may be put your name as the author , next License : 'ISC" -- finally you can see it's generated our JSon = which is the configuration file for our project. then it asking us type Y/N for yes hit enter. 
- Now the New File created at our project folder , It's the package .json , so this is a way of representing our data , the JavaScript Object notation
- You can see it's very similar to the way that JavaScript objects are Structured and it's just key value pairs all of things that we'e entered just now.This is configuration file, nothing magical about it. When The magic comes in when we start installing and using NPM pacakge and to install an NPM Package
- To install the NPM use 'npm install <nameOfPackage>' --> SS at 4.49 , Where are that pacakge you can  find them by going to 'npmjs.com' --> this webiste you can search for the entire world of package. but you would kind of need to know what it is you want to do.EG you search sillyname in that website it just pacakge for random name generator, that pacakage you seen there that provide all info about that package , install command eg: if you install that sillyname package use in terminal : 'npm i sillyname' this command type or copy paste in your terminal and hit enter it install | 
-'npm i sillyname' -- break down this command is npm i means --> npm install --> this is shorten it down into --> npm i , if you install more pacakge provide space between one pacakage to another EG: 'npm i sillyname filesystem randomnumber' -- like that bunch of pakages we could able to install ''Internet is need to install npm packages''
- here we install one pacakage 'npm i sillyname' after install you check pacakge.json file again, you can see it's inserted a new section Called Dependencies, It's saying now our project, our NPM , which acces through the index.js and now depends on this npm pacakage called sillyname. In addition we got a folder called node modules that's downloaded all of this code from the npm repositories for this sillyname. you can see the code the creator wrote so that we can use this functionality in our project without having to write all of this code
- for collapse both see the documentaion how could we use , same how we import fs like that also we import this using require method

-- we create variable called gernerate name that requies this module --> var generate = require("sillyname"); , then use the method generateName(); that is sillyName npm method EG: var sillyname = generateName(); now console.log(`My name is ${sillyname}.'); --> it will generateRandom name along with your given string , but when you use $ string interpolation use '`' backticks symbol instead of double or single quotes.
